<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="build" name="jfetion">
    <property environment="env" />
    <property name="debuglevel" value="source,lines,vars" />
    <property name="debug" value="true" />
    <property name="target" value="1.5" />
    <property name="source" value="1.5" />
    <property name="src.dir" value="src" />
    <property name="test.dir" value="test" />
    <property name="classes.dir" value="classes" />
    <property name="lib.dir" value="lib" />
    <property name="bin.dir" value="bin" />
    <property name="native.dir" value="native" />
    <property name="native.src.dir" value="native/src" />
    <property name="native.bin" value="libjfetion.so" />
    <property name="meta.info.dir" value="META-INF" />
    <property name="dist.dir" value="dist" />
    <property name="dist.name" value="${ant.project.name}" />
    <property name="dist.version" value="0.2.1" />
    <property name="report.dir" value="report" />
    <property name="pmd.ruleset.file" value="pmd.xml" />
    <property name="pmd.report.format" value="xml" />
    <property name="pmd.report.file" value="pmd_report.xml" />
    <property name="pmd.report.xslt" value="pmd-report-per-class.xslt" />
    <property name="pmd.report.output.dir" value="${report.dir}/pmd" />
    <property name="pmd.report.output.file" value="pmd_report.html" />
    <property name="failonerror" value="true" />
    <property name="fork" value="true" />

    <path id="classpath">
        <pathelement location="${classes.dir}" />
    </path>

    <target name="init">
        <mkdir dir="${bin.dir}" />
        <mkdir dir="${classes.dir}" />
    </target>

    <target name="clean">
        <delete dir="${bin.dir}" />
        <delete dir="${classes.dir}" />
        <exec executable="make">
            <arg value="clean" />
        </exec>
    </target>

    <target depends="clean" name="distclean">
        <delete dir="${dist.dir}" />
        <delete file="${pmd.report.output.dir}/${pmd.report.file}" />
        <delete file="${pmd.report.output.dir}/${pmd.report.output.file}" />
    </target>

    <target depends="build-project, build-native" name="build" />

    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}" />
        <javac debug="${debug}" debuglevel="${debuglevel}" destdir="${classes.dir}" source="${source}" target="${target}">
            <src path="${src.dir}" />
            <classpath refid="classpath" />
        </javac>
    </target>

    <target depends="init" name="build-native">
        <exec executable="make">
        </exec>
    </target>

    <path id="pmd.classpath">
        <pathelement location="${classes.dir}" />
        <pathelement location="${lib.dir}/pmd-4.2.2.jar" />
        <pathelement location="${lib.dir}/jaxen-1.1.1.jar" />
        <pathelement location="${lib.dir}/asm-3.1.jar" />
    </path>

    <taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask" classpathref="pmd.classpath" />

    <target name="pmd">
        <pmd rulesetfiles="${pmd.ruleset.file}">
            <formatter type="${pmd.report.format}" toFile="${pmd.report.output.dir}/${pmd.report.file}" toConsole="true" />
            <fileset dir="${src.dir}">
                <include name="**/*.java" />
            </fileset>
        </pmd>
        <xslt in="${pmd.report.output.dir}/${pmd.report.file}" style="${report.dir}/${pmd.report.xslt}" out="${pmd.report.output.dir}/${pmd.report.output.file}" />
    </target>

    <target depends="build" name="jar">
        <jar destfile="${bin.dir}/${dist.name}-${dist.version}.jar">
            <fileset dir="${classes.dir}" excludes="**/Test*.class" />
            <manifest>
                <attribute name="Built-By" value="${user.name}" />
            </manifest>
        </jar>
    </target>

    <target depends="jar" name="dist">
        <delete dir="${dist.dir}" />
        <mkdir dir="${dist.dir}/${dist.name}-${dist.version}" />
        <mkdir dir="${dist.dir}/${dist.name}-${dist.version}/${bin.dir}" />
        <copy todir="${dist.dir}/${dist.name}-${dist.version}/${bin.dir}">
            <fileset dir="${bin.dir}" />
        </copy>
        <copy file="${native.src.dir}/${native.bin}" todir="${dist.dir}/${dist.name}-${dist.version}/${bin.dir}" />
        <chmod perm="a+x" file="${dist.dir}/${dist.name}-${dist.version}/${bin.dir}/${native.bin}" />
    </target>
</project>
